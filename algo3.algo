procedure dotprod( VAR v1,v2 : ARRAY_OF INTEGER [10];) : INTEGER
VAR
    dot,i : INTEGER
BEGIN
    dot:= 0
    i:=0
    
    IF (v1.length <> v2.length) THEN
        write ("vectore with diff size ! we cannote calculate product")
        dot := NAN 
    
    END_IF 
    WHILE (i<v1.length) DO
        dot := dot + v1[i]* v2[i]
        i++
    END_WHILE
    
END

FUNCTION dotprod( VAR v1,v2 : ARRAY_OF INTEGER [10];) : INTEGER
VAR
    dot,i : INTEGER
BEGIN
    dot:= 0
    i:=0
    
    IF (v1.length <> v2.length) THEN
        write ("vectore with diff size ! we cannote calculate product")
        dot := NAN 
    
    END_IF 
    WHILE (i<v1.length) DO
        dot := dot + v1[i]* v2[i]
        i++
    END_WHILE
    RETURN dot;
END

ALGORITHM  Dot product
VAR 
    v1, v2 : ARRAY_OF INTEGER [10]
    dot : INTEGER
BEGIN
    write (" enter a first vector")
    n1 : read_size()
    read_arr(v1,n1)

    write ("enter a second vector")
    n2 : read_size()
    read_arr(v2,n2)
    dotProd(v1 ,v2)
    IF (DOT=0) THEN
    write ("v1 and v2 orthogonal")
    ELSE
    write (" v1 and v2 are not orthogonal")
    END_IF

END